# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
name: Test Workflow

on:
  workflow_call:
  pull_request:

jobs:
  sqlite-test:
    strategy:
      matrix:
        py-version: [3.8, 3.12]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version }}
      - name: Build and run tests
        run: |
          python --version
          python -m pip install -r requirements.txt
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: sqlite3 report ${{ matrix.py-version }}

  postgresql-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version }}
      - uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name: Build and run tests
        run: |
          export ATASKQ_CONNECTION=${PG_CONNECTION/postgresql/pg}
          echo ATASKQ_CONNECTION $ATASKQ_CONNECTION
          python --version
          python -m pip install -r requirements.txt
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
        env:
          PG_CONNECTION: ${{ steps.postgres.outputs.connection-uri }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: postgres report ${{ matrix.py-version }}

  restapi-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version }}
      - uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name: Build and run tests
        run: |
          echo ATASKQ_CONNECTION $ATASKQ_CONNECTION
          export ATASKQ_SERVER_CONNECTION=${PG_CONNECTION/postgresql/pg}
          echo ATASKQ_SERVER_CONNECTION $ATASKQ_SERVER_CONNECTION
          echo ATASKQ_SERVER_TASK_PULSE_TIMEOUT_MONITOR_INTERVAL $ATASKQ_SERVER_TASK_PULSE_TIMEOUT_MONITOR_INTERVAL
          echo ATASKQ_TASK_PULSE_TIMEOUT $ATASKQ_TASK_PULSE_TIMEOUT
          echo ATASKQ_TASK_WAIT_TIMEOUT $ATASKQ_TASK_WAIT_TIMEOUT
          mkdir ataskq/server/www && touch ataskq/server/www/index.html  # server mocks
          python --version
          python -m pip install -r requirements.txt
          python -m uvicorn ataskq.server.server:app --port 8080 &
          sleep 5
          curl http://127.0.0.1:8080/health
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
        env:
          PG_CONNECTION: ${{ steps.postgres.outputs.connection-uri }}
          ATASKQ_CONNECTION: http://127.0.0.1:8080
          ATASKQ_DB_INIT_ON_HANDLER_INIT: 0
          ATASKQ_SERVER_TASK_PULSE_TIMEOUT_MONITOR_INTERVAL: 2
          ATASKQ_TASK_PULSE_TIMEOUT: 1.5
          ATASKQ_TASK_WAIT_TIMEOUT: 10
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: rest api report ${{ matrix.py-version }}
