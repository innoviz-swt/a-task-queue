name: CI

on:
  push:

jobs:
  sqlite-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Build and run tests
        run: |
         python --version
         python -m pip install -r requirements.txt
         python -m pytest . -v --junitxml=tmp/report.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report.xml
          check_name: sqlite3 report

  postgresql-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name:  Build and run tests
        run: |
         python --version
         python -m pip install -r requirements.txt
         echo CONNECTION_STR $CONNECTION_STR
         ATASKQ_TEST_CONNECTION=$CONNECTION_STR python -m pytest . -v --junitxml=tmp/report.xml
        env:
          CONNECTION_STR: ${{ steps.postgres.outputs.connection-uri }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report.xml
          check_name: postgres report
