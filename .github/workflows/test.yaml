# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
# todo share py-version between tests as a matrix https://github.com/orgs/community/discussions/26284

name: Test Workflow

on:
  workflow_call:
  pull_request:

jobs:
  sqlite-test:
    strategy:
      matrix:
        py-version: [3.8, 3.12]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py-version }}
      - name: Build and run tests
        run: |
          python --version
          python -m pip install -r requirements.txt
          python ataskq/test_config_env.py
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: sqlite3 report ${{ matrix.py-version }}

  postgresql-test:
    strategy:
      matrix:
        py-version: [3.8, 3.12]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py-version }}
      - uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name: Build and run tests
        run: |
          export ataskq_connection=${PG_CONNECTION/postgresql/pg}
          echo ataskq_connection $ataskq_connection
          python --version
          python -m pip install -r requirements.txt
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
        env:
          PG_CONNECTION: ${{ steps.postgres.outputs.connection-uri }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: postgres report ${{ matrix.py-version }}

  restapi-test:
    strategy:
      matrix:
        py-version: [3.8, 3.12]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py-version }}
      - uses: ikalnytskyi/action-setup-postgres@v4
        id: postgres
      - name: Build and run tests
        run: |
          export ATASKQ_SERVER_CONNECTION=${PG_CONNECTION/postgresql/pg}
          echo ATASKQ_SERVER_CONNECTION $ATASKQ_SERVER_CONNECTION
          echo ataskq_monitor_pulse_interval $ataskq_monitor_pulse_interval
          echo ataskq_monitor_pulse_timeout $ataskq_monitor_pulse_timeout
          echo ataskq_run_wait_timeout $ataskq_run_wait_timeout
          mkdir ataskq/server/www && touch ataskq/server/www/index.html  # server mocks
          python --version
          python -m pip install -r requirements.txt
          ataskq_connection=$ATASKQ_SERVER_CONNECTION UVICORN_HOST=localhost ./scripts/run_server &
          ataskq_connection=$ATASKQ_SERVER_CONNECTION UVICORN_HOST=localhost ./scripts/run_background &
          sleep 5
          curl http://localhost:8080/health
          python -m pytest . -v --junitxml=tmp/report-${{ matrix.py-version }}.xml
        env:
          PG_CONNECTION: ${{ steps.postgres.outputs.connection-uri }}
          ATASKQ_CONFIG: "client"
          ATASKQ_SERVER_CONFIG: "server"
          ataskq_monitor_pulse_interval: 2
          ataskq_monitor_pulse_timeout: 1.5
          ataskq_run_wait_timeout: 10
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: tmp/report-${{ matrix.py-version }}.xml
          check_name: rest api report ${{ matrix.py-version }}
